def buildAsLibrary = project.hasProperty('BUILD_AS_LIBRARY');
def buildAsApplication = !buildAsLibrary
if (buildAsApplication) {
    apply plugin: 'com.android.application'
}
else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion 26
    defaultConfig {
        if (buildAsApplication) {
            applicationId "${ANDROID_APK_PACKAGE}"
        }
        minSdkVersion 24
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    if (!project.hasProperty('EXCLUDE_NATIVE_LIBS')) {
        sourceSets {
            main {
                jniLibs.srcDir 'src/main/jniLibs'
            }
        }
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    buildToolsVersion = '28.0.3'

    if (buildAsLibrary) {
        libraryVariants.all { variant ->
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith(".aar")) {
                    def fileName = "org.libsdl.app.aar";
                    output.outputFile = new File(outputFile.parent, fileName);
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
}

afterEvaluate {
//    assembleDebug.doLast {
//        copy {
//            from 'build/outputs/apk/debug'
//            into '../../../Binaries/Android/${CMAKE_BUILD_TYPE}'
//            include '**/*.apk'
//       }
//    } 

//    assembleRelease.doLast {
//        copy {
//            from 'build/outputs/apk/release'
//            into '../../../Binaries/Android/${CMAKE_BUILD_TYPE}'
//            include '**/*.apk'
//        }
//    }
}